@model CadClientes.Models.Cliente
@{
    Layout = null;
}

<script src="~/Scripts/validacao/validacpf.js"></script>
<script src="~/Scripts/validacao/validaIdade.js"></script>
<script type="text/javascript">
    var cpfValido = false;
    var maiorIdade = false;

    function SubmitForm(form) {

        $.ajax({
            type: "POST",
            url: form.action,
            data: $(form).serialize(),
            success: function (result) {
                Popup.dialog('close');
                dataTable.ajax.reload();
                $.notify(result.message, "success");
            }
        });
        return false;
    }

    function ValidacaoCpf() {
        if (!ValidaCPF($('#Cpf').val())) {
            alert('CPF inválido');
            $('#Cpf').focus();
        }
        else {
            cpfValido = true;
        }
    }

    function ValidacaoIdade() {
        
        if (!ValidaIdade($('#DtNascimento').val())) {
            alert('Idade inferior a 18 anos');
            $('#DtNascimento').focus();
        }
        else {
            maiorIdade = true;            
        }

        ValidaForm();
    }

    function ValidaForm() {
        if (cpfValido && maiorIdade) {
            $('#btnGravar').prop('disabled', false);            
        }
    }
</script>


@using (Html.BeginForm("IncluirOuEditar", "Cliente", FormMethod.Post, new { onsubmit = "return SubmitForm(this)", id = "includeOrEdit" }))
{
    <div class="modal-body">
        @Html.HiddenFor(model => model.ClienteId)
        <div class="form-group">
            @Html.LabelFor(model => model.Nome, new { @class = "control-label" })
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", @required = "required", minlength = 10, maxlength = 50 } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cpf, new { @class = "control-label" })
            @Html.EditorFor(model => model.Cpf, new { htmlAttributes = new { @onblur = "ValidacaoCpf();", @class = "form-control", @required = "required", minlength = 11, maxlength = 11 } })            
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DtNascimento, new { @class = "control-label" })
            @Html.EditorFor(model => model.DtNascimento, new { htmlAttributes = new { @onblur = "ValidacaoIdade();", @class = "form-control", @required = "required" } })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sexo, new { @class = "control-label" })
            @Html.RadioButtonFor(model => model.Sexo, "M", new { Checked = "checked" })@Html.Label(" Masculino")
            @Html.RadioButtonFor(model => model.Sexo, "F", false)@Html.Label(" Feminino")
            @Html.RadioButtonFor(model => model.Sexo, "I", false) @Html.Label(" Indefinido")
        </div>
        <div class="form-group">
            <input type="submit" value="Gravar" class="btn btn-primary" id="btnGravar" disabled="disabled"/>
            <input type="reset" value="Limpar" class="btn btn-secondary" />
        </div>
    </div>
}

